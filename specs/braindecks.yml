openapi: 3.0.2
info:
  title: 'API приложения для заучивания иностранных слов.'
  version: 'v1'
  description: 'Описаны ручки и действия по ним. '
  # Раздел API-auth Описывает регистрацию, подтвреждение и логин пользователя. 
  # Раздел API-dashboard описывает работы так называемой главной страницы, 
  # где у пользователя отображаются колоды, он может создать новую, 
  # отредактировать выбранную или удалить. 
  # Раздел API-cards описывает работы с карточками в каждой колоде.'
paths:
  /api/v1/auth/signup/:
    post:
      operationId: Регистрация
      description: "Регистрация пользователя. Пользователь вводит email и password. На почту пользователю приходит сообщение с ссылкой актвиации и пока он по ней не перейдет его профиль считается неактивным. Права доступа: Доступно без токена. Поля email должны быть уникальными. Методы: только POST"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
      responses:
        '400':
          content:
            application/json:
              schema:
                type: object
                properties: 
                  email:
                    type: string
          description: 'Ошибка создания пользователя, такая почта уже существует в БД.'
      tags:
      - Пользователи
    # get:
    #   operationId: Получение свойств карточки
    #   description: 'По данному запросу пользователь получает свойство картчоки. Какие поля есть и что там.'
    #   parameters:
    #   - name: slug
    #     in: path
    #     required: true
    #     description: ''
    #     schema:
    #       type: string
    #   - name: id
    #     in: path
    #     required: true
    #     description: A unique integer value identifying this card.
    #     schema:
    #       type: string
    #   responses:
    #     '200':
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Card'
    #       description: ''
    #   tags:
    #   - api-cards
    # put:
    #   operationId: Обновление карточки
    #   description: 'Пользователь обновляет данные в карточке.'
    #   parameters:
    #   - name: slug
    #     in: path
    #     required: true
    #     description: ''
    #     schema:
    #       type: string
    #   - name: id
    #     in: path
    #     required: true
    #     description: A unique integer value identifying this card.
    #     schema:
    #       type: string
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/Card'
    #       application/x-www-form-urlencoded:
    #         schema:
    #           $ref: '#/components/schemas/Card'
    #       multipart/form-data:
    #         schema:
    #           $ref: '#/components/schemas/Card'
    #   responses:
    #     '200':
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Card'
    #       description: ''
    #   tags:
    #   - api-cards
    # patch:
    #   operationId: partialUpdateCard
    #   description: ''
    #   parameters:
    #   - name: slug
    #     in: path
    #     required: true
    #     description: ''
    #     schema:
    #       type: string
    #   - name: id
    #     in: path
    #     required: true
    #     description: A unique integer value identifying this card.
    #     schema:
    #       type: string
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/Card'
    #       application/x-www-form-urlencoded:
    #         schema:
    #           $ref: '#/components/schemas/Card'
    #       multipart/form-data:
    #         schema:
    #           $ref: '#/components/schemas/Card'
    #   responses:
    #     '200':
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Card'
    #       description: ''
    #   tags:
    #   - api-cards
    # delete:
    #   operationId: Удаление картчоки.
    #   description: 'Пользователь удаляет конкретную картчоку.'
    #   parameters:
    #   - name: slug
    #     in: path
    #     required: true
    #     description: ''
    #     schema:
    #       type: string
    #   - name: id
    #     in: path
    #     required: true
    #     description: A unique integer value identifying this card.
    #     schema:
    #       type: string
    #   responses:
    #     '204':
    #       description: ''
    #   tags:
    #   - api-cards
components:
  schemas:
    Deck:
      type: object
      properties:
        author:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        cards_per_day:
          type: integer
        amount:
          type: string
          readOnly: true
      required:
      - title
    Card:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        front_side:
          type: string
          maxLength: 200
        prompt:
          type: string
          nullable: true
          maxLength: 200
        back_side:
          type: string
          maxLength: 200
        example:
          type: string
        next_use_date:
          type: string
        level:
          type: integer
      required:
      - front_side
      - back_side
    SignUp:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 100
        password:
          type: string
          minLength: 8
          pattern: (?=.*[A-Z])
        first_name:
          type: string
          nullable: true
          maxLength: 150
        last_name:
          type: string
          nullable: true
          maxLength: 150
      required:
      - email
      - password
    MyTokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    ConfirmCode:
      type: object
      properties: {}
